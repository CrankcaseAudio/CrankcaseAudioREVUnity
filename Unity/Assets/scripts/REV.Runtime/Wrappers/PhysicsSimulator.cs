/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace CrankcaseAudio.Wrappers {

using System;
using System.Runtime.InteropServices;

public partial class PhysicsSimulator : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PhysicsSimulator(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(PhysicsSimulator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PhysicsSimulator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CrankcaseAudioPINVOKE.delete_PhysicsSimulator(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public PhysicsSimulator() : this(CrankcaseAudioPINVOKE.new_PhysicsSimulator(), true) {
  }

  public void Initialize(VehiclePhysicsControlData arg0) {
    CrankcaseAudioPINVOKE.PhysicsSimulator_Initialize(swigCPtr, VehiclePhysicsControlData.getCPtr(arg0));
  }

  public PhysicsOutputParameters Update(PhysicsUpdateParams arg0, float deltaTime) {
    PhysicsOutputParameters ret = new PhysicsOutputParameters(CrankcaseAudioPINVOKE.PhysicsSimulator_Update(swigCPtr, PhysicsUpdateParams.getCPtr(arg0), deltaTime), true);
    if (CrankcaseAudioPINVOKE.SWIGPendingException.Pending) throw CrankcaseAudioPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public VehiclePhysicsControlData GetControlDataPtr() {
    IntPtr cPtr = CrankcaseAudioPINVOKE.PhysicsSimulator_GetControlDataPtr(swigCPtr);
    VehiclePhysicsControlData ret = (cPtr == IntPtr.Zero) ? null : new VehiclePhysicsControlData(cPtr, false);
    return ret;
  }

  public void SetControlData(VehiclePhysicsControlData pData) {
    CrankcaseAudioPINVOKE.PhysicsSimulator_SetControlData(swigCPtr, VehiclePhysicsControlData.getCPtr(pData));
  }

  public void Reset() {
    CrankcaseAudioPINVOKE.PhysicsSimulator_Reset(swigCPtr);
  }

}

}
