/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace CrankcaseAudio.Wrappers {

using System;
using System.Runtime.InteropServices;

public class CrankcaseAudio {
  public static bool FixupModel(SWIGTYPE_p_void inRawModelData, SWIGTYPE_p_p_void outModelHandle, SWIGTYPE_p_CrankcaseAudio__ModelFixupError outError) {
    bool ret = CrankcaseAudioPINVOKE.FixupModel(SWIGTYPE_p_void.getCPtr(inRawModelData), SWIGTYPE_p_p_void.getCPtr(outModelHandle), SWIGTYPE_p_CrankcaseAudio__ModelFixupError.getCPtr(outError));
    return ret;
  }

  public static bool CheckModelHeader(SWIGTYPE_p_void inModelHandle) {
    bool ret = CrankcaseAudioPINVOKE.CheckModelHeader(SWIGTYPE_p_void.getCPtr(inModelHandle));
    return ret;
  }

  public static int GetNumberOfChannels(SWIGTYPE_p_void inModelHandle) {
    int ret = CrankcaseAudioPINVOKE.GetNumberOfChannels(SWIGTYPE_p_void.getCPtr(inModelHandle));
    return ret;
  }

  public static bool GetHasLoops(SWIGTYPE_p_void inModelHandle) {
    bool ret = CrankcaseAudioPINVOKE.GetHasLoops(SWIGTYPE_p_void.getCPtr(inModelHandle));
    return ret;
  }

  public static VehiclePhysicsControlData GetREVPhysicsControlData(SWIGTYPE_p_void inModelHandle) {
    VehiclePhysicsControlData ret = new VehiclePhysicsControlData(CrankcaseAudioPINVOKE.GetREVPhysicsControlData(SWIGTYPE_p_void.getCPtr(inModelHandle)), true);
    return ret;
  }

  public static int KMaxNumberOfGear {
    get {
      int ret = CrankcaseAudioPINVOKE.KMaxNumberOfGear_get();
      return ret;
    } 
  }

  public static string gREVVersion {
    set {
      CrankcaseAudioPINVOKE.gREVVersion_set(value);
    } 
    get {
      string ret = CrankcaseAudioPINVOKE.gREVVersion_get();
      return ret;
    } 
  }

  public static readonly int VERSION_COMPATIBLE_MASK = CrankcaseAudioPINVOKE.VERSION_COMPATIBLE_MASK_get();
}

}
